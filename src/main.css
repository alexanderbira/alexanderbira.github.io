body {
  background-color: var(--color-bg);
  color: var(--color-text);
  font-family: var(--font-family), sans-serif;
  font-size: 16px;
  line-height: 1.5;
  margin: 0;
}

.hidden {
  --order: default; /* This is a custom property that will be set in JavaScript to stagger the animations. */
  opacity: 0;
  filter: blur(5px);
  translate: -100%;
  transition:
    translate 0.5s ease calc(50ms * var(--order)),
    transform 0.2s ease 0s,
    opacity 0.5s ease 0s,
    filter 0.5s ease 0s !important; /* I used different transition delays for transform and translate properties, meaning when they slide in on view it can be staggered, but when they slide on hover it's instant. */
}

@media (prefers-reduced-motion) {
  .hidden {
    transition: none;
  }
}

.show {
  opacity: 1;
  filter: blur(0);
  translate: 0;
}

@keyframes textGradient {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: 50% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

.attributionContainer {
  text-align: center;
}

.attribution {
  text-align: center;
  opacity: 0.3;
  font-size: 0.8rem;
  flex-grow: 0;
  width: fit-content;
  padding: 2em;
}

.attribution > a {
  color: inherit !important;
  text-decoration: underline;
  font-weight: 800;
  background-image: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
  background-size: 400% auto;
  background-clip: text;
  -webkit-background-clip: text;
}

.attribution:hover {
  opacity: 1;
}

.attribution:hover > a {
  opacity: 1 !important;
  -webkit-text-fill-color: transparent;
  color: var(--color-primary) !important;
}

.attribution > a:hover {
  text-shadow: 0 0 0.5rem rgba(255, 255, 255, 0.5);
  animation: textGradient 1s ease infinite alternate;
  transition-duration: 0.2s;
}
